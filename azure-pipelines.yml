trigger:
  - master

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

jobs:
  - job: Lint
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: ^10.13.0
        displayName: 'Install Node.js'
      - task: Npm@1
        inputs:
          command: custom
          customCommand: i -g npm@latest
        displayName: 'Install latest NPM'
      - script: |
          node -v
          npm -v
        displayName: 'Print versions'
      - task: CacheBeta@1
        inputs:
          key: npm | $(Agent.OS) | package-lock.json
          path: $(npm_config_cache)
        displayName: 'Cache npm'
      - script: npm ci
        displayName: 'Install dependencies'
      - script: npm run lint
        displayName: 'Run lint'

  - job: Linux
    pool:
      vmImage: ubuntu-latest
    strategy:
      maxParallel: 4
      matrix:
        node-13:
          node_version: ^13.0.0
          webpack_version: latest
        node-12:
          node_version: ^12.0.0
          webpack_version: latest
        node-10:
          node_version: ^10.13.0
          webpack_version: latest
        node-10-canary:
          node_version: ^10.13.0
          webpack_version: next
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: 'Install Node.js $(node_version)'
      - task: Npm@1
        inputs:
          command: custom
          customCommand: i -g npm@latest
        displayName: 'Install latest NPM'
      - script: |
          node -v
          npm -v
        displayName: 'Print versions'
      - task: CacheBeta@1
        inputs:
          key: npm | $(Agent.OS) | package-lock.json
          path: $(npm_config_cache)
        displayName: 'Cache npm'
      - script: npm ci
        displayName: 'Install dependencies'
      - script: npm i webpack@$(webpack_version)
        displayName: 'Install "webpack@$(webpack_version)"'
      - script: npm run build
        displayName: 'Run build'

